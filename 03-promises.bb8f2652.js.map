{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAG3C,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbR,EAAKgB,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAEN,MAAMC,EAAaC,SAASjB,EAAWkB,OACjCC,EAAYF,SAAShB,EAAUiB,OAC/BE,EAAcH,SAASf,EAAYgB,OACzC,IAAIG,EAAW,EACXC,EAAeN,EAEnB,IAAK,IAAIO,EAAI,EAAGA,EAAIH,EAAaG,IAC/BpB,EAAckB,EAAUC,GACrBE,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqBvB,QAAiBC,MAAU,IAGnDuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAA9B,GAAS+B,OAAOG,SAAS,IAI7BR,IACAC,GAAgBH,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n// const submitBtn = document.querySelector('button');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const delayValue = parseInt(delayInput.value);\n  const stepValue = parseInt(stepInput.value);\n  const amountValue = parseInt(amountInput.value);\n  let position = 1;\n  let currentDelay = delayValue;\n\n  for (let i = 0; i < amountValue; i++) {\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure();\n        `❌ Rejected promise ${position} in ${delay}ms`;\n      });\n\n    position++;\n    currentDelay += stepValue;\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delayValue","parseInt","value","stepValue","amountValue","position1","currentDelay","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.bb8f2652.js.map"}