{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAG3C,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIPR,EAAKgB,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAQN,IANA,IAAMC,EAAaC,SAASjB,EAAWkB,OACjCC,EAAYF,SAAShB,EAAUiB,OAC/BE,EAAcH,SAASf,EAAYgB,OACrCG,EAAW,EACXC,EAAeN,EAEVO,EAAI,EAAGA,EAAIH,EAAaG,IAC/BpB,EAAckB,EAAUC,GACrBE,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAGjDyB,OAAM,SAAAL,GAAWA,EAARrB,SAAeqB,EAALpB,MAClBqB,EAAA/B,GAASgC,OAAOI,S,IAIpBV,IACAC,GAAgBH,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n// const submitBtn = document.querySelector('button');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const delayValue = parseInt(delayInput.value);\n  const stepValue = parseInt(stepInput.value);\n  const amountValue = parseInt(amountInput.value);\n  let position = 1;\n  let currentDelay = delayValue;\n\n  for (let i = 0; i < amountValue; i++) {\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure();\n        `❌ Rejected promise ${position} in ${delay}ms`;\n      });\n\n    position++;\n    currentDelay += stepValue;\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delayValue","parseInt","value","stepValue","amountValue","position1","currentDelay","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.8a4052ce.js.map"}